{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Willp\\\\Desktop\\\\chat-app-sage\\\\chat-app-client-master\\\\src\\\\components\\\\UI\\\\UserList\\\\UserBar\\\\UserBar.jsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { FaUserSecret, FaUserSlash, FaUserPlus, FaUserMinus, FaEnvelope } from \"react-icons/fa\";\nconst UserBarStyle = styled.li`\n  margin-top: 0.75rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0.5rem 0.25rem;\n  margin: 1rem 0;\n  background-color: offwhite;\n  border: solid medium rgba(46, 49, 49, 0.6);\n  text-align: center;\n  align-items: center;\n`;\nconst Username = styled.span`\n  color: lightslategray;\n  margin-left: 2rem;\n`;\nconst UserAvatar = styled.span`\n  font-size: 1.75rem;\n  margin-left: 1rem;\n`;\nconst UserActionIcons = styled.span`\n  font-size: 1.75rem;\n  margin-left: auto;\n  margin-right: 1.25rem;\n  display: flex;\n  justify-content: space-between;\n  & svg {\n    margin: auto 0.25rem;\n  }\n`; // Needs to support user avatars, add/remove friend, block, send message (for DMs)\n// Tooltips over the icons would be useful\n\nexport default function UserBar({\n  avatar = \"default\",\n  isUser,\n  username,\n  friend,\n  addFriendHandler,\n  removeFriendHandler,\n  addFavoriteHandler,\n  removeFavoriteHandler,\n  id,\n  clientID\n}) {\n  if (avatar == \"default\") {\n    avatar = /*#__PURE__*/React.createElement(FaUserSecret, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 14\n      }\n    });\n  }\n\n  let friendOperation = /*#__PURE__*/React.createElement(FaUserPlus, {\n    onClick: () => {\n      addFriendHandler(clientID, id, username);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  });\n\n  if (friend) {\n    friendOperation = /*#__PURE__*/React.createElement(FaUserMinus, {\n      onClick: () => {\n        removeFriendHandler(clientID, id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    });\n  } //   if (userIsFriend) {\n  // display FaUserMinus\n  // } else {\n  // display FaUserPlus\n  //   }\n\n\n  let clientUserBar = /*#__PURE__*/React.createElement(UserBarStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UserAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaUserSecret, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Username, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, username), /*#__PURE__*/React.createElement(UserActionIcons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }));\n  return isUser ? clientUserBar : /*#__PURE__*/React.createElement(UserBarStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UserAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaUserSecret, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Username, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, username), /*#__PURE__*/React.createElement(UserActionIcons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaEnvelope, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), friendOperation, /*#__PURE__*/React.createElement(FaUserSlash, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Willp/Desktop/chat-app-sage/chat-app-client-master/src/components/UI/UserList/UserBar/UserBar.jsx"],"names":["React","styled","FaUserSecret","FaUserSlash","FaUserPlus","FaUserMinus","FaEnvelope","UserBarStyle","li","Username","span","UserAvatar","UserActionIcons","UserBar","avatar","isUser","username","friend","addFriendHandler","removeFriendHandler","addFavoriteHandler","removeFavoriteHandler","id","clientID","friendOperation","clientUserBar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SACEC,YADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,UALF,QAMO,gBANP;AAQA,MAAMC,YAAY,GAAGN,MAAM,CAACO,EAAG;;;;;;;;;;;CAA/B;AAaA,MAAMC,QAAQ,GAAGR,MAAM,CAACS,IAAK;;;CAA7B;AAKA,MAAMC,UAAU,GAAGV,MAAM,CAACS,IAAK;;;CAA/B;AAKA,MAAME,eAAe,GAAGX,MAAM,CAACS,IAAK;;;;;;;;;CAApC,C,CAWA;AACA;;AAEA,eAAe,SAASG,OAAT,CAAiB;AAC9BC,EAAAA,MAAM,GAAG,SADqB;AAE9BC,EAAAA,MAF8B;AAG9BC,EAAAA,QAH8B;AAI9BC,EAAAA,MAJ8B;AAK9BC,EAAAA,gBAL8B;AAM9BC,EAAAA,mBAN8B;AAO9BC,EAAAA,kBAP8B;AAQ9BC,EAAAA,qBAR8B;AAS9BC,EAAAA,EAT8B;AAU9BC,EAAAA;AAV8B,CAAjB,EAWZ;AACD,MAAIT,MAAM,IAAI,SAAd,EAAyB;AACvBA,IAAAA,MAAM,gBAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT;AACD;;AACD,MAAIU,eAAe,gBACjB,oBAAC,UAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbN,MAAAA,gBAAgB,CAACK,QAAD,EAAWD,EAAX,EAAeN,QAAf,CAAhB;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;;AAOA,MAAIC,MAAJ,EAAY;AACVO,IAAAA,eAAe,gBACb,oBAAC,WAAD;AACE,MAAA,OAAO,EAAE,MAAM;AACbL,QAAAA,mBAAmB,CAACI,QAAD,EAAWD,EAAX,CAAnB;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GAnBA,CAoBD;AACA;AACA;AACA;AACA;;;AACA,MAAIG,aAAa,gBACf,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWT,QAAX,CAJF,eAKE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASA,SAAOD,MAAM,GACXU,aADW,gBAGX,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWT,QAAX,CAJF,eAKE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGQ,eAFH,eAGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CALF,CAHF;AAeD","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n  FaUserSecret,\r\n  FaUserSlash,\r\n  FaUserPlus,\r\n  FaUserMinus,\r\n  FaEnvelope,\r\n} from \"react-icons/fa\";\r\n\r\nconst UserBarStyle = styled.li`\r\n  margin-top: 0.75rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  padding: 0.5rem 0.25rem;\r\n  margin: 1rem 0;\r\n  background-color: offwhite;\r\n  border: solid medium rgba(46, 49, 49, 0.6);\r\n  text-align: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Username = styled.span`\r\n  color: lightslategray;\r\n  margin-left: 2rem;\r\n`;\r\n\r\nconst UserAvatar = styled.span`\r\n  font-size: 1.75rem;\r\n  margin-left: 1rem;\r\n`;\r\n\r\nconst UserActionIcons = styled.span`\r\n  font-size: 1.75rem;\r\n  margin-left: auto;\r\n  margin-right: 1.25rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  & svg {\r\n    margin: auto 0.25rem;\r\n  }\r\n`;\r\n\r\n// Needs to support user avatars, add/remove friend, block, send message (for DMs)\r\n// Tooltips over the icons would be useful\r\n\r\nexport default function UserBar({\r\n  avatar = \"default\",\r\n  isUser,\r\n  username,\r\n  friend,\r\n  addFriendHandler,\r\n  removeFriendHandler,\r\n  addFavoriteHandler,\r\n  removeFavoriteHandler,\r\n  id,\r\n  clientID,\r\n}) {\r\n  if (avatar == \"default\") {\r\n    avatar = <FaUserSecret />;\r\n  }\r\n  let friendOperation = (\r\n    <FaUserPlus\r\n      onClick={() => {\r\n        addFriendHandler(clientID, id, username);\r\n      }}\r\n    />\r\n  );\r\n  if (friend) {\r\n    friendOperation = (\r\n      <FaUserMinus\r\n        onClick={() => {\r\n          removeFriendHandler(clientID, id);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  //   if (userIsFriend) {\r\n  // display FaUserMinus\r\n  // } else {\r\n  // display FaUserPlus\r\n  //   }\r\n  let clientUserBar = (\r\n    <UserBarStyle>\r\n      <UserAvatar>\r\n        <FaUserSecret />\r\n      </UserAvatar>\r\n      <Username>{username}</Username>\r\n      <UserActionIcons></UserActionIcons>\r\n    </UserBarStyle>\r\n  );\r\n  return isUser ? (\r\n    clientUserBar\r\n  ) : (\r\n    <UserBarStyle>\r\n      <UserAvatar>\r\n        <FaUserSecret />\r\n      </UserAvatar>\r\n      <Username>{username}</Username>\r\n      <UserActionIcons>\r\n        <FaEnvelope />\r\n        {friendOperation}\r\n        <FaUserSlash />\r\n      </UserActionIcons>\r\n    </UserBarStyle>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}