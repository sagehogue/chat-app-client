{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Willp\\\\Desktop\\\\chat-app-sage\\\\chat-app-client-master\\\\src\\\\components\\\\UI\\\\Input\\\\Input.js\";\nimport React from \"react\";\nimport styled from \"styled-components\"; // TODO:\n// Make sexy word wrapping capabilities so people can type \n// out walls of text easily.\n// Add styling breakpoints - mobile first\n\nconst Form = styled.form`\n  display: flex;\n  width: inherit;\n  border-top: 2px solid #d3d3d3;\n`;\nconst InputStyle = styled.textarea`\n  border: none;\n  resize: none;\n  width: 78%;\n  overflow: scroll-y;\n  // min-height: 7vh;\n  word-wrap: break-word;\n  whitespace: wrap;\n  border-radius: 0;\n  padding: .5rem;\n  font-size: .85rem;\n  &:focus,\n  textarea:focus,\n  select:focus {\n    outline: none;\n  }\n  @media screen and (min-width: 800px) {\n    padding: 1rem;\n    font-size: 1rem;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 1.25rem;\n    font-size: 1.15rem;\n    // min-height: 12.5vh;\n  }\n  @media screen and (min-width: 1600px) {\n    padding: 1.5rem;\n  }\n          @media (max-height: 450px) and (min-width: 550px) {\n          // min-height: 6.75vh;\n        }\n`;\nconst SendButton = styled.button`\n  color: #fff !important;\n  text-transform: uppercase;\n  text-decoration: none;\n  background: #2979ff;\n  padding: 2px;\n  display: inline-block;\n  border: none;\n  width: 22%;\n`;\n\nconst Input = ({\n  setMessage,\n  sendMessage,\n  message\n}) => /*#__PURE__*/React.createElement(Form, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(InputStyle, {\n  className: \"input\",\n  type: \"text\",\n  placeholder: \"Type a message...\",\n  value: message,\n  onChange: ({\n    target: {\n      value\n    }\n  }) => setMessage(value),\n  onKeyPress: event => event.key === \"Enter\" ? sendMessage(event) : null,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(SendButton, {\n  onClick: e => sendMessage(e),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }\n}, \"Send\"));\n\nexport default Input;","map":{"version":3,"sources":["C:/Users/Willp/Desktop/chat-app-sage/chat-app-client-master/src/components/UI/Input/Input.js"],"names":["React","styled","Form","form","InputStyle","textarea","SendButton","button","Input","setMessage","sendMessage","message","target","value","event","key","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;AACA;AACA;AAEA;;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,IAAK;;;;CAAzB;AAMA,MAAMC,UAAU,GAAGH,MAAM,CAACI,QAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAnC;AAiCA,MAAMC,UAAU,GAAGL,MAAM,CAACM,MAAO;;;;;;;;;CAAjC;;AAUA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,WAAd;AAA2BC,EAAAA;AAA3B,CAAD,kBACZ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,UAAD;AACE,EAAA,SAAS,EAAC,OADZ;AAEE,EAAA,IAAI,EAAC,MAFP;AAGE,EAAA,WAAW,EAAC,mBAHd;AAIE,EAAA,KAAK,EAAEA,OAJT;AAKE,EAAA,QAAQ,EAAE,CAAC;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AAAV,GAAD,KAA2BJ,UAAU,CAACI,KAAD,CALjD;AAME,EAAA,UAAU,EAAEC,KAAK,IAAKA,KAAK,CAACC,GAAN,KAAc,OAAd,GAAwBL,WAAW,CAACI,KAAD,CAAnC,GAA6C,IANrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eASE,oBAAC,UAAD;AAAY,EAAA,OAAO,EAAEE,CAAC,IAAIN,WAAW,CAACM,CAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATF,CADF;;AAcA,eAAeR,KAAf","sourcesContent":["import React from \"react\";\n\nimport styled from \"styled-components\";\n\n// TODO:\n// Make sexy word wrapping capabilities so people can type \n// out walls of text easily.\n\n// Add styling breakpoints - mobile first\n\nconst Form = styled.form`\n  display: flex;\n  width: inherit;\n  border-top: 2px solid #d3d3d3;\n`;\n\nconst InputStyle = styled.textarea`\n  border: none;\n  resize: none;\n  width: 78%;\n  overflow: scroll-y;\n  // min-height: 7vh;\n  word-wrap: break-word;\n  whitespace: wrap;\n  border-radius: 0;\n  padding: .5rem;\n  font-size: .85rem;\n  &:focus,\n  textarea:focus,\n  select:focus {\n    outline: none;\n  }\n  @media screen and (min-width: 800px) {\n    padding: 1rem;\n    font-size: 1rem;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 1.25rem;\n    font-size: 1.15rem;\n    // min-height: 12.5vh;\n  }\n  @media screen and (min-width: 1600px) {\n    padding: 1.5rem;\n  }\n          @media (max-height: 450px) and (min-width: 550px) {\n          // min-height: 6.75vh;\n        }\n`;\n\nconst SendButton = styled.button`\n  color: #fff !important;\n  text-transform: uppercase;\n  text-decoration: none;\n  background: #2979ff;\n  padding: 2px;\n  display: inline-block;\n  border: none;\n  width: 22%;\n`;\nconst Input = ({ setMessage, sendMessage, message }) => (\n  <Form>\n    <InputStyle\n      className=\"input\"\n      type=\"text\"\n      placeholder=\"Type a message...\"\n      value={message}\n      onChange={({ target: { value } }) => setMessage(value)}\n      onKeyPress={event => (event.key === \"Enter\" ? sendMessage(event) : null)}\n    />\n    <SendButton onClick={e => sendMessage(e)}>Send</SendButton>\n  </Form>\n);\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}