{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Willp\\\\Desktop\\\\chat-app-sage\\\\chat-app-client-master\\\\src\\\\components\\\\Messages\\\\Messages.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport Message from \"./Message/Message\"; // TODO:\n// Smarter message sorting\n// Save the right messages, display SYSTEM messages differently\n// Get ScrollToBottom working\n// Make a prettier/clearer way to display messages from SYSTEM/admin\n\nconst MessagesStyle = styled.div`\n  padding: 1.5% 0 1% 0;\n  flex: auto;\n  min-height: 70vh;\n  overflow-y: scroll;\n`;\n\nconst Messages = ({\n  messages,\n  name\n}) => {\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n  console.log(messages);\n  let lastUserToSendMessage; // if (messages.length) {\n  //   lastUserToSendMessage = messages[messages.length - 1].user\n  // }\n\n  return /*#__PURE__*/React.createElement(MessagesStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, messages.map((message, i) => {\n    try {\n      let differentUser = lastUserToSendMessage !== message.user ? true : false;\n      lastUserToSendMessage = message.user;\n      return /*#__PURE__*/React.createElement(Message, {\n        key: i,\n        message: message,\n        user: name,\n        shouldDisplayUsername: (differentUser || lastUserToSendMessage === undefined) && message.user !== \"admin\" ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      });\n    } catch (err) {\n      console.log(\"ERROR: Message improperly formatted or otherwise exploding the program.\");\n      console.log(err);\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: messagesEndRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Messages;","map":{"version":3,"sources":["C:/Users/Willp/Desktop/chat-app-sage/chat-app-client-master/src/components/Messages/Messages.js"],"names":["React","useEffect","useRef","styled","Message","MessagesStyle","div","Messages","messages","name","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","console","log","lastUserToSendMessage","map","message","i","differentUser","user","undefined","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,OAAP,MAAoB,mBAApB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,aAAa,GAAGF,MAAM,CAACG,GAAI;;;;;CAAjC;;AAMA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AACvC,QAAMC,cAAc,GAAGR,MAAM,CAAC,IAAD,CAA7B;;AACA,QAAMS,cAAc,GAAG,MAAM;AAC3BD,IAAAA,cAAc,CAACE,OAAf,CAAuBC,cAAvB,CAAsC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAtC;AACD,GAFD;;AAGAb,EAAAA,SAAS,CAACU,cAAD,EAAiB,CAACH,QAAD,CAAjB,CAAT;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACA,MAAIS,qBAAJ,CAPuC,CAQvC;AACA;AACA;;AACA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,QAAQ,CAACU,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,KAAgB;AAC5B,QAAI;AACF,UAAIC,aAAa,GACfJ,qBAAqB,KAAKE,OAAO,CAACG,IAAlC,GAAyC,IAAzC,GAAgD,KADlD;AAEAL,MAAAA,qBAAqB,GAAGE,OAAO,CAACG,IAAhC;AACA,0BACE,oBAAC,OAAD;AACE,QAAA,GAAG,EAAEF,CADP;AAEE,QAAA,OAAO,EAAED,OAFX;AAGE,QAAA,IAAI,EAAEV,IAHR;AAIE,QAAA,qBAAqB,EACnB,CAACY,aAAa,IAAIJ,qBAAqB,KAAKM,SAA5C,KACAJ,OAAO,CAACG,IAAR,KAAiB,OADjB,GAEI,IAFJ,GAGI,KARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAaD,KAjBD,CAiBE,OAAOE,GAAP,EAAY;AACZT,MAAAA,OAAO,CAACC,GAAR,CACE,yEADF;AAGAD,MAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACD;AACF,GAxBA,CADH,eA0BE;AAAK,IAAA,GAAG,EAAEd,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,CADF;AA8BD,CAzCD;;AA2CA,eAAeH,QAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport Message from \"./Message/Message\";\n\n// TODO:\n// Smarter message sorting\n// Save the right messages, display SYSTEM messages differently\n// Get ScrollToBottom working\n// Make a prettier/clearer way to display messages from SYSTEM/admin\n\nconst MessagesStyle = styled.div`\n  padding: 1.5% 0 1% 0;\n  flex: auto;\n  min-height: 70vh;\n  overflow-y: scroll;\n`;\nconst Messages = ({ messages, name }) => {\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n  useEffect(scrollToBottom, [messages]);\n  console.log(messages);\n  let lastUserToSendMessage;\n  // if (messages.length) {\n  //   lastUserToSendMessage = messages[messages.length - 1].user\n  // }\n  return (\n    <MessagesStyle>\n      {messages.map((message, i) => {\n        try {\n          let differentUser =\n            lastUserToSendMessage !== message.user ? true : false;\n          lastUserToSendMessage = message.user;\n          return (\n            <Message\n              key={i}\n              message={message}\n              user={name}\n              shouldDisplayUsername={\n                (differentUser || lastUserToSendMessage === undefined) &&\n                message.user !== \"admin\"\n                  ? true\n                  : false\n              }\n            />\n          );\n        } catch (err) {\n          console.log(\n            \"ERROR: Message improperly formatted or otherwise exploding the program.\"\n          );\n          console.log(err);\n        }\n      })}\n      <div ref={messagesEndRef} />\n    </MessagesStyle>\n  );\n};\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}