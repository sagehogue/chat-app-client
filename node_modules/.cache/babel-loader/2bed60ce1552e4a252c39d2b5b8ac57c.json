{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Willp\\\\Desktop\\\\chat-app-sage\\\\chat-app-client-master\\\\src\\\\pages\\\\LoginPage\\\\RegisterForm\\\\RegisterForm.js\";\nimport React, { useState } from \"react\";\nimport styled, { keyframes, css } from 'styled-components';\nimport { SubmitButton } from '../../../components/UI/Button/Button';\nimport LoginButton from \"../SignInButton/SignInButton\";\nimport RegisterButton from \"../RegisterButton/RegisterButton\"; // TODOS:\n// Password validation\n// Password/Confirm password matching\n// error messages\n// error handling\n\nconst fadeOutKey = keyframes`\n0% {\n  opacity: 1;\n}\n50% {\n    opacity: 1;\n  }\n100% {\n  opacity: 0;\n}`;\nconst fadeInKey = keyframes`\n0% {\n  opacity: 0;\n}\n50% {\n    opacity: 0;\n  }\n100% {\n  opacity: 1;\n}`;\n\nconst fadeIn = props => css`\n    ${fadeInKey} 1s;\n  `;\n\nconst fadeOut = props => css`\n    ${fadeOutKey} 1s;\n  `; // TODOS\n// 1. Implement password verification - 2 fields must match, \n// be of appropriate length + complexity\n// 2. Email must be appropriately formatted and available.\n// 3. Username must be of appropriate length, comprised of allowable chars, available.\n\n\nconst RegisterFormStyle = styled.form`\ndisplay: flex;\njustify-content: space-around;\nalign-items: center;\nflex-direction: column;\nwidth: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  animation-fill-mode: forwards;\n  margin: auto;\n  justify-content: center;\n  transition: all 0.5s ease-in;\n  border-radius: 2%;\n  animation: ${props => props.animateLoginForm ? `${fadeOut}` : 'none'};\n  animation: ${props => props.showRegisterForm ? `${fadeIn}` : 'none'};\n  opacity: ${props => props.showRegisterForm ? 1 : 0};\n  z-index: ${props => props.showRegisterForm ? 10 : 0};\n  pointer-events: ${props => props.showRegisterForm ? \"auto\" : \"none\"};\n`;\nconst Heading = styled.h1`\n  color: white;\n  font-size: 2rem;\n  font-family: \"Josefin Sans\", sans-serif;\n  padding: 1rem .5rem;\n  @media (max-width: 300px) {\n    font-size: 1.65rem;\n  }\n`;\nconst EmailInput = styled.input`\n  border-radius: 0;\n  padding: 15px 20px;\n  width: 100%;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n`;\nconst UserInput = styled.input`\n  border-radius: 0;\n  margin-top: 20px;\n  padding: 15px 20px;\n  width: 100%;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n`;\nconst PasswordInput = styled.input`\n  border-radius: 0;\n  padding: 15px 20px;\n  width: 100%;\n  margin-top: 20px;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n`;\nconst PasswordInputConfirm = styled.input`\n  border-radius: 0;\n  padding: 15px 20px;\n  width: 100%;\n  margin-top: 20px;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n`;\nconst CreateButton = styled(SubmitButton)`\n  background: #157f1f;\n  border: none;\n  width: 75%;\n  margin-top: 1.5rem;\n`;\nexport default function RegisterForm({\n  showRegisterForm,\n  heading,\n  handleSubmit\n}) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const handlePasswordConfirmation = event => {\n    // Implement this logic\n    setPasswordConfirm(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(RegisterFormStyle, {\n    showRegisterForm: showRegisterForm,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, `${heading}`), /*#__PURE__*/React.createElement(EmailInput, {\n    required: true,\n    placeholder: \"Email\",\n    name: \"email\",\n    type: \"text\",\n    onChange: event => setEmail(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(UserInput, {\n    required: true,\n    placeholder: \"Username\",\n    name: \"username\",\n    type: \"text\",\n    onChange: event => setUsername(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PasswordInput, {\n    required: true,\n    placeholder: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    onChange: event => setPassword(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PasswordInputConfirm, {\n    required: true,\n    placeholder: \"Confirm Password\",\n    type: \"text\",\n    onChange: event => handlePasswordConfirmation(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CreateButton, {\n    type: \"submit\",\n    value: \"Create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Willp/Desktop/chat-app-sage/chat-app-client-master/src/pages/LoginPage/RegisterForm/RegisterForm.js"],"names":["React","useState","styled","keyframes","css","SubmitButton","LoginButton","RegisterButton","fadeOutKey","fadeInKey","fadeIn","props","fadeOut","RegisterFormStyle","form","animateLoginForm","showRegisterForm","Heading","h1","EmailInput","input","UserInput","PasswordInput","PasswordInputConfirm","CreateButton","RegisterForm","heading","handleSubmit","username","setUsername","password","setPassword","passwordConfirm","setPasswordConfirm","email","setEmail","handlePasswordConfirmation","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport styled, { keyframes, css } from 'styled-components';\n\nimport { SubmitButton } from '../../../components/UI/Button/Button'\nimport LoginButton from \"../SignInButton/SignInButton\";\nimport RegisterButton from \"../RegisterButton/RegisterButton\";\n\n// TODOS:\n// Password validation\n// Password/Confirm password matching\n// error messages\n// error handling\n\nconst fadeOutKey = keyframes`\n0% {\n  opacity: 1;\n}\n50% {\n    opacity: 1;\n  }\n100% {\n  opacity: 0;\n}`\n\nconst fadeInKey = keyframes`\n0% {\n  opacity: 0;\n}\n50% {\n    opacity: 0;\n  }\n100% {\n  opacity: 1;\n}`\n\nconst fadeIn = props =>\n  css`\n    ${fadeInKey} 1s;\n  `\n\nconst fadeOut = props =>\n  css`\n    ${fadeOutKey} 1s;\n  `\n\n// TODOS\n// 1. Implement password verification - 2 fields must match, \n// be of appropriate length + complexity\n// 2. Email must be appropriately formatted and available.\n// 3. Username must be of appropriate length, comprised of allowable chars, available.\n\nconst RegisterFormStyle = styled.form`\ndisplay: flex;\njustify-content: space-around;\nalign-items: center;\nflex-direction: column;\nwidth: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  animation-fill-mode: forwards;\n  margin: auto;\n  justify-content: center;\n  transition: all 0.5s ease-in;\n  border-radius: 2%;\n  animation: ${props => (props.animateLoginForm ? `${fadeOut}` : 'none')};\n  animation: ${props => (props.showRegisterForm ? `${fadeIn}` : 'none')};\n  opacity: ${props => (props.showRegisterForm ? 1 : 0)};\n  z-index: ${props => (props.showRegisterForm ? 10 : 0)};\n  pointer-events: ${props => (props.showRegisterForm ? \"auto\" : \"none\")};\n`;\n\nconst Heading = styled.h1`\n  color: white;\n  font-size: 2rem;\n  font-family: \"Josefin Sans\", sans-serif;\n  padding: 1rem .5rem;\n  @media (max-width: 300px) {\n    font-size: 1.65rem;\n  }\n`;\nconst EmailInput = styled.input`\n  border-radius: 0;\n  padding: 15px 20px;\n  width: 100%;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n`;\n\nconst UserInput = styled.input`\n  border-radius: 0;\n  margin-top: 20px;\n  padding: 15px 20px;\n  width: 100%;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n`;\nconst PasswordInput = styled.input`\n  border-radius: 0;\n  padding: 15px 20px;\n  width: 100%;\n  margin-top: 20px;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n`;\nconst PasswordInputConfirm = styled.input`\n  border-radius: 0;\n  padding: 15px 20px;\n  width: 100%;\n  margin-top: 20px;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n`;\n\nconst CreateButton = styled(SubmitButton)`\n  background: #157f1f;\n  border: none;\n  width: 75%;\n  margin-top: 1.5rem;\n`;\nexport default function RegisterForm({ showRegisterForm, heading, handleSubmit }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const handlePasswordConfirmation = (event) => {\n    // Implement this logic\n    setPasswordConfirm(event.target.value)\n  }\n  return (\n    <RegisterFormStyle showRegisterForm={showRegisterForm} onSubmit={handleSubmit}>\n      <Heading>\n        {`${heading}`}\n      </Heading>\n      <EmailInput\n        required\n        placeholder=\"Email\"\n        name=\"email\"\n        type=\"text\"\n        onChange={event => setEmail(event.target.value)}\n      />\n\n      <UserInput\n        required\n        placeholder=\"Username\"\n        name=\"username\"\n        type=\"text\"\n        onChange={event => setUsername(event.target.value)}\n      />\n\n      <PasswordInput\n        required\n        placeholder=\"Password\"\n        name=\"password\"\n        type=\"password\"\n        onChange={event => setPassword(event.target.value)}\n      />\n\n      <PasswordInputConfirm\n        required\n        placeholder=\"Confirm Password\"\n        type=\"text\"\n        onChange={event => handlePasswordConfirmation(event)}\n      />\n\n      <CreateButton type=\"submit\" value=\"Create\" />\n    </RegisterFormStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}