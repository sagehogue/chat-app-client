{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Willp\\\\Desktop\\\\chat-app-sage\\\\chat-app-client-master\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport io from \"socket.io-client\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport firebaseConfig from \"./firebaseConfig\";\nimport Loader from \"./components/UI/Animations/Loading/Loading\";\nimport Chat from \"./components/Chat/Chat\";\nimport Join from \"./components/Join/Join\";\nimport LoginPage from \"./pages/LoginPage/LoginPage\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport GlobalStyle from \"./util/GlobalStyles/GlobalStyles\"; // TODOS:\n// Refactor redundant/useless code. Looks like there's lots of repetition here.\n// Make a background component, use it on loginpage/homepage/loader to keep it from flashing white on load\n// Initialize firebase for auth purposes\n\nfirebase.initializeApp(firebaseConfig); // initialize socket.io\n\nlet socket;\nconst ENDPOINT = \"localhost:5000\";\nconst SocketContext = React.createContext(socket);\nconst SocketProvider = SocketContext.Provider;\nexport const SocketConsumer = SocketContext.Consumer; // Listen for auth events\n\nfunction onAuthStateChange(callback) {\n  return firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      console.log(\"Socket.io connecting displayName \" + user.displayName);\n      socket = io(ENDPOINT, {\n        query: `displayName=${user.displayName}`\n      });\n      callback({\n        loggedIn: true,\n        displayName: user.displayName,\n        email: user.email,\n        emailVerified: user.emailVerified,\n        photoURL: user.photoURL,\n        isAnonymous: user.isAnonymous,\n        uid: user.uid\n      });\n    } else {\n      callback({\n        loggedIn: false\n      });\n    }\n  });\n}\n\nfunction login(username, password) {\n  firebase.auth().signInWithEmailAndPassword(username, password);\n}\n\nfunction logout() {\n  firebase.auth().signOut();\n}\n\nexport const getStorageRef = () => {\n  const storage = firebase.storage();\n  return storage.ref();\n};\nexport const firebaseController = {\n  login: (email, password) => login(email, password),\n  logout: logout\n}; // Initial/default context state\n\nconst defaultUser = {\n  loggedIn: false\n}; // object which must be imported to access context\n\nexport const AuthContext = React.createContext(defaultUser);\nconst UserProvider = AuthContext.Provider;\nexport const UserConsumer = AuthContext.Consumer; // END OF FUNCTION DEFINITIONS\n\nconst App = () => {\n  const requestLogin = useCallback((username, password) => {\n    login(username, password);\n  });\n  const requestLogout = useCallback(() => {\n    logout();\n  }, []);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChange(setUser);\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  const [user, setUser] = useState({\n    loggedIn: null\n  }); //  Maybe check if null, false, or true and display loading, loggedout, loggedin.\n  // const [user, setUser] = useState({ loggedIn: firebase.auth().currentUser });\n  // <ThemeContext.Consumer>\n  //   {\n  //     theme => (<UserContext.Consumer>\n  //       {\n  //         user => (<ProfilePage user={user} theme={theme} />)\n  //       }\n  //     </UserContext.Consumer>)\n  //   }\n  // </ThemeContext.Consumer>\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SocketProvider, {\n    value: socket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserProvider, {\n    value: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    render: props => user.loggedIn == null ? /*#__PURE__*/React.createElement(Loader, {\n      fullscreen: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }) : user.loggedIn ? /*#__PURE__*/React.createElement(SocketConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, socket => /*#__PURE__*/React.createElement(HomePage, Object.assign({\n      socket: socket\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 32\n      }\n    }))) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    render: props => user.loggedIn == /*#__PURE__*/React.createElement(Loader, {\n      fullscreen: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 32\n      }\n    }) ? null : user.loggedIn ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(LoginPage, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Willp/Desktop/chat-app-sage/chat-app-client-master/src/App.js"],"names":["React","useState","useEffect","useCallback","firebase","io","BrowserRouter","Router","Route","Redirect","firebaseConfig","Loader","Chat","Join","LoginPage","HomePage","GlobalStyle","initializeApp","socket","ENDPOINT","SocketContext","createContext","SocketProvider","Provider","SocketConsumer","Consumer","onAuthStateChange","callback","auth","onAuthStateChanged","user","console","log","displayName","query","loggedIn","email","emailVerified","photoURL","isAnonymous","uid","login","username","password","signInWithEmailAndPassword","logout","signOut","getStorageRef","storage","ref","firebaseController","defaultUser","AuthContext","UserProvider","UserConsumer","App","requestLogin","requestLogout","unsubscribe","setUser","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAO,KAAKC,QAAZ,MAA0B,cAA1B;AACA,OAAO,eAAP;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,QAAzC,QAAyD,kBAAzD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAOC,MAAP,MAAmB,4CAAnB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,WAAP,MAAwB,kCAAxB,C,CAEA;AACA;AACA;AAEA;;AACAZ,QAAQ,CAACa,aAAT,CAAuBP,cAAvB,E,CAEA;;AACA,IAAIQ,MAAJ;AACA,MAAMC,QAAQ,GAAG,gBAAjB;AACA,MAAMC,aAAa,GAAGpB,KAAK,CAACqB,aAAN,CAAoBH,MAApB,CAAtB;AACA,MAAMI,cAAc,GAAGF,aAAa,CAACG,QAArC;AACA,OAAO,MAAMC,cAAc,GAAGJ,aAAa,CAACK,QAArC,C,CACP;;AACA,SAASC,iBAAT,CAA2BC,QAA3B,EAAqC;AACnC,SAAOvB,QAAQ,CAACwB,IAAT,GAAgBC,kBAAhB,CAAoCC,IAAD,IAAU;AAClD,QAAIA,IAAJ,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAsCF,IAAI,CAACG,WAAvD;AACAf,MAAAA,MAAM,GAAGb,EAAE,CAACc,QAAD,EAAW;AAAEe,QAAAA,KAAK,EAAG,eAAcJ,IAAI,CAACG,WAAY;AAAzC,OAAX,CAAX;AACAN,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,QAAQ,EAAE,IADH;AAEPF,QAAAA,WAAW,EAAEH,IAAI,CAACG,WAFX;AAGPG,QAAAA,KAAK,EAAEN,IAAI,CAACM,KAHL;AAIPC,QAAAA,aAAa,EAAEP,IAAI,CAACO,aAJb;AAKPC,QAAAA,QAAQ,EAAER,IAAI,CAACQ,QALR;AAMPC,QAAAA,WAAW,EAAET,IAAI,CAACS,WANX;AAOPC,QAAAA,GAAG,EAAEV,IAAI,CAACU;AAPH,OAAD,CAAR;AASD,KAZD,MAYO;AACLb,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,QAAQ,EAAE;AAAZ,OAAD,CAAR;AACD;AACF,GAhBM,CAAP;AAiBD;;AAED,SAASM,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AACjCvC,EAAAA,QAAQ,CAACwB,IAAT,GAAgBgB,0BAAhB,CAA2CF,QAA3C,EAAqDC,QAArD;AACD;;AACD,SAASE,MAAT,GAAkB;AAChBzC,EAAAA,QAAQ,CAACwB,IAAT,GAAgBkB,OAAhB;AACD;;AAED,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,QAAMC,OAAO,GAAG5C,QAAQ,CAAC4C,OAAT,EAAhB;AACA,SAAOA,OAAO,CAACC,GAAR,EAAP;AACD,CAHM;AAMP,OAAO,MAAMC,kBAAkB,GAAG;AAChCT,EAAAA,KAAK,EAAE,CAACL,KAAD,EAAQO,QAAR,KAAqBF,KAAK,CAACL,KAAD,EAAQO,QAAR,CADD;AAEhCE,EAAAA,MAAM,EAAEA;AAFwB,CAA3B,C,CAIP;;AACA,MAAMM,WAAW,GAAG;AAAEhB,EAAAA,QAAQ,EAAE;AAAZ,CAApB,C,CACA;;AACA,OAAO,MAAMiB,WAAW,GAAGpD,KAAK,CAACqB,aAAN,CAAoB8B,WAApB,CAApB;AAEP,MAAME,YAAY,GAAGD,WAAW,CAAC7B,QAAjC;AACA,OAAO,MAAM+B,YAAY,GAAGF,WAAW,CAAC3B,QAAjC,C,CAEP;;AAEA,MAAM8B,GAAG,GAAG,MAAM;AAChB,QAAMC,YAAY,GAAGrD,WAAW,CAAC,CAACuC,QAAD,EAAWC,QAAX,KAAwB;AACvDF,IAAAA,KAAK,CAACC,QAAD,EAAWC,QAAX,CAAL;AACD,GAF+B,CAAhC;AAGA,QAAMc,aAAa,GAAGtD,WAAW,CAAC,MAAM;AACtC0C,IAAAA,MAAM;AACP,GAFgC,EAE9B,EAF8B,CAAjC;AAIA3C,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwD,WAAW,GAAGhC,iBAAiB,CAACiC,OAAD,CAArC;AACA,WAAO,MAAM;AACXD,MAAAA,WAAW;AACZ,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAMA,QAAM,CAAC5B,IAAD,EAAO6B,OAAP,IAAkB1D,QAAQ,CAAC;AAAEkC,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAhC,CAdgB,CAgBhB;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEjB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEY,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,MAAM,EAAG8B,KAAD,IACN9B,IAAI,CAACK,QAAL,IAAiB,IAAjB,gBACE,oBAAC,MAAD;AAAQ,MAAA,UAAU,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAEIL,IAAI,CAACK,QAAL,gBACF,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIjB,MAAD,iBAAY,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEA;AAAlB,OAA8B0C,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADf,CADE,gBAKF,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAiBE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,MAAM,EAAGA,KAAD,IACN9B,IAAI,CAACK,QAAL,iBAAiB,oBAAC,MAAD;AAAQ,MAAA,UAAU,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB,GAAyC,IAAzC,GAAgDL,IAAI,CAACK,QAAL,gBAC9C,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD8C,gBAG9C,oBAAC,SAAD,oBAAeyB,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,eA2BE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,CADF,CADF,CADF;AAmCD,CAhED;;AAkEA,eAAeL,GAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport io from \"socket.io-client\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport firebaseConfig from \"./firebaseConfig\";\n\nimport Loader from \"./components/UI/Animations/Loading/Loading\";\n\nimport Chat from \"./components/Chat/Chat\";\nimport Join from \"./components/Join/Join\";\nimport LoginPage from \"./pages/LoginPage/LoginPage\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport GlobalStyle from \"./util/GlobalStyles/GlobalStyles\";\n\n// TODOS:\n// Refactor redundant/useless code. Looks like there's lots of repetition here.\n// Make a background component, use it on loginpage/homepage/loader to keep it from flashing white on load\n\n// Initialize firebase for auth purposes\nfirebase.initializeApp(firebaseConfig);\n\n// initialize socket.io\nlet socket;\nconst ENDPOINT = \"localhost:5000\";\nconst SocketContext = React.createContext(socket);\nconst SocketProvider = SocketContext.Provider;\nexport const SocketConsumer = SocketContext.Consumer;\n// Listen for auth events\nfunction onAuthStateChange(callback) {\n  return firebase.auth().onAuthStateChanged((user) => {\n    if (user) {\n      console.log(\"Socket.io connecting displayName \" + user.displayName);\n      socket = io(ENDPOINT, { query: `displayName=${user.displayName}` });\n      callback({\n        loggedIn: true,\n        displayName: user.displayName,\n        email: user.email,\n        emailVerified: user.emailVerified,\n        photoURL: user.photoURL,\n        isAnonymous: user.isAnonymous,\n        uid: user.uid,\n      });\n    } else {\n      callback({ loggedIn: false });\n    }\n  });\n}\n\nfunction login(username, password) {\n  firebase.auth().signInWithEmailAndPassword(username, password);\n}\nfunction logout() {\n  firebase.auth().signOut();\n}\n\nexport const getStorageRef = () => {\n  const storage = firebase.storage();\n  return storage.ref();\n};\n\n\nexport const firebaseController = {\n  login: (email, password) => login(email, password),\n  logout: logout,\n};\n// Initial/default context state\nconst defaultUser = { loggedIn: false };\n// object which must be imported to access context\nexport const AuthContext = React.createContext(defaultUser);\n\nconst UserProvider = AuthContext.Provider;\nexport const UserConsumer = AuthContext.Consumer;\n\n// END OF FUNCTION DEFINITIONS\n\nconst App = () => {\n  const requestLogin = useCallback((username, password) => {\n    login(username, password);\n  });\n  const requestLogout = useCallback(() => {\n    logout();\n  }, []);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChange(setUser);\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  const [user, setUser] = useState({ loggedIn: null });\n\n  //  Maybe check if null, false, or true and display loading, loggedout, loggedin.\n\n  // const [user, setUser] = useState({ loggedIn: firebase.auth().currentUser });\n\n  // <ThemeContext.Consumer>\n  //   {\n  //     theme => (<UserContext.Consumer>\n  //       {\n  //         user => (<ProfilePage user={user} theme={theme} />)\n  //       }\n  //     </UserContext.Consumer>)\n  //   }\n  // </ThemeContext.Consumer>\n  return (\n    <Router>\n      <SocketProvider value={socket}>\n        <UserProvider value={user}>\n          {/* Put loading component here */}\n          <Route\n            path=\"/\"\n            exact\n            render={(props) =>\n              user.loggedIn == null ? (\n                <Loader fullscreen />\n              ) : user.loggedIn ? (\n                <SocketConsumer>\n                  {(socket) => <HomePage socket={socket} {...props} />}\n                </SocketConsumer>\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route\n            path=\"/login\"\n            render={(props) =>\n              user.loggedIn == <Loader fullscreen /> ? null : user.loggedIn ? (\n                <Redirect to=\"/\" />\n              ) : (\n                <LoginPage {...props} />\n              )\n            }\n          />\n          <GlobalStyle />\n        </UserProvider>\n      </SocketProvider>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}