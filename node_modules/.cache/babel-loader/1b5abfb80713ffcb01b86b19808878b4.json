{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Willp\\\\Desktop\\\\chat-app-sage\\\\chat-app-client-master\\\\src\\\\components\\\\Join\\\\Join.js\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { AiOutlineArrowDown } from \"react-icons/ai\";\nimport RoomCard from \"../UI/RoomCard/RoomCard\"; // import AnimateComponent from \"../UI/Animations/AnimateComponent/AnimateComponent\";\n\nimport Theme from \"../../util/Theme/Theme\"; // I think I'm going to fix this by splitting the logic and visual elements up.\n// I need to be able to animate the elements properly without interrupting the flow of data.\n//\n\nconst JoinOuterContainer = styled.div`\n  display: flex;\n  grid-row: ${Theme.gridRowChat};\n  grid-column: ${Theme.gridColChat};\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  margin: auto;\n  @media screen and (max-height: 400px) {\n    max-height: 75vh;\n  }\n\n  @media (min-width: 600px) and (max-height: 450px) {\n    // max-height: 60vh;\n  }\n`;\nconst JoinInnerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 0.8rem;\n  // height: 83vh;\n  width: 55vw;\n  margin: auto;\n`;\nconst Heading = styled.h1`\n  color: ${Theme.offWhite};\n  justify-self: flex-start;\n  font-size: 2.5rem;\n  padding-bottom: 10px;\n  border-bottom: 2px solid white;\n  margin-top: 0;\n  @media (min-width: 600px) and (max-height: 450px) {\n    font-size: 2.25rem;\n  }\n`;\nconst Directive = styled.h3`\n  color: ${Theme.offWhite};\n  margin-top: 1.5rem;\n  margin-bottom: 3rem;\n  font-size: 1.75rem;\n  @media (min-width: 600px) and (max-height: 450px) {\n    margin-top: 1rem;\n    margin-bottom: 1.5rem;\n    font-size: 1.25rem;\n  }\n`;\nconst JoinInput = styled.input`\n  border-radius: 0;\n  padding: 15px 20px;\n  box-shadow: none;\n  width: 100%;\n  @media screen and (min-width: 1000px) {\n    width: 75%;\n  }\n`;\nconst JoinModal = styled.div`\n  margin: 1rem auto auto auto;\n`;\nconst SignInButton = styled.button`\n  color: #fff !important;\n  text-transform: uppercase;\n  text-decoration: none;\n  background: #2979ff;\n  padding: 20px;\n  border-radius: 5px;\n  display: inline-block;\n  border: none;\n  margin-top: 20px;\n  width: 100%;\n  & :focus {\n    outline: 0;\n  }\n  @media screen and (min-width: 1000px) {\n    width: 50%;\n  }\n`;\nconst Animation = styled.div`\n  transition: 0.5s;\n  /* example for move item */\n  z-index: ${({\n  state\n}) => state === \"entering\" || state === \"entered\" ? 1 : 0};\n  /* change opacity*/\n  opacity: ${({\n  state\n}) => {\n  switch (state) {\n    case \"entering\":\n      return \"1\";\n\n    case \"entered\":\n      return \"1\";\n\n    case \"exiting\":\n      return \"0\";\n\n    case \"exited\":\n      return \"0\";\n  }\n}};\n  display: ${({\n  state\n}) => state === \"exited\" ? \"none\" : \"block\"};\n`;\nconst PublicRoomListHeader = styled.h3`\n  margin-top: 15vh;\n  color: ${Theme.offWhite};\n`;\nconst PublicRoomList = styled.section`\n  margin-top: 5vh;\n  display: flex;\n`;\nconst ArrowDown = styled(AiOutlineArrowDown)`\n  margin: 1rem auto 0 auto;\n  display: block;\n  color: #2979ff;\n`;\nconst NoRooms = styled.div`\n  color: ${Theme.offWhite};\n  text-align: center;\n  margin: 5rem auto 0 auto;\n`;\nexport default function JoinInternals({\n  user,\n  joinHandler,\n  previewedRooms\n}) {\n  const [room, setRoom] = useState(\"\");\n\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") {\n      //   do validation\n      if (room) {// joinHandler(room.trim());\n      }\n    }\n  };\n\n  let PublicRooms = previewedRooms.map(room => /*#__PURE__*/React.createElement(RoomCard, {\n    roomName: room.roomName,\n    id: room.id,\n    usercount: room.online,\n    joinHandler: joinHandler,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }));\n  return /*#__PURE__*/React.createElement(JoinOuterContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(JoinInnerContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, \"Welcome \", user.displayName, \"!\"), /*#__PURE__*/React.createElement(Directive, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, \"Enter the name of the room you wish to join.\"), /*#__PURE__*/React.createElement(JoinModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(JoinInput, {\n    placeholder: \"Room\",\n    type: \"text\",\n    onChange: event => setRoom(event.target.value),\n    onKeyDown: handleKeyDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SignInButton //   type=\"submit\"\n  //   onClick={(e) => {\n  //     if (room) {\n  //       joinHandler(room);\n  //     }\n  //   }\n  // }\n  , {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, \"Sign In\")), /*#__PURE__*/React.createElement(PublicRoomListHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, \"Or jump into a conversation in an active public chat room.\"), /*#__PURE__*/React.createElement(ArrowDown, {\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PublicRoomList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, !!previewedRooms[0] == true ? PublicRooms : /*#__PURE__*/React.createElement(NoRooms, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, \"It appears there are no populated rooms. Why don't you join one and invite someone to chat with?\"))));\n}","map":{"version":3,"sources":["C:/Users/Willp/Desktop/chat-app-sage/chat-app-client-master/src/components/Join/Join.js"],"names":["React","useState","styled","AiOutlineArrowDown","RoomCard","Theme","JoinOuterContainer","div","gridRowChat","gridColChat","JoinInnerContainer","Heading","h1","offWhite","Directive","h3","JoinInput","input","JoinModal","SignInButton","button","Animation","state","PublicRoomListHeader","PublicRoomList","section","ArrowDown","NoRooms","JoinInternals","user","joinHandler","previewedRooms","room","setRoom","handleKeyDown","event","key","PublicRooms","map","roomName","id","online","displayName","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,OAAOC,QAAP,MAAqB,yBAArB,C,CACA;;AAEA,OAAOC,KAAP,MAAkB,wBAAlB,C,CAEA;AACA;AACA;;AAEA,MAAMC,kBAAkB,GAAGJ,MAAM,CAACK,GAAI;;cAExBF,KAAK,CAACG,WAAY;iBACfH,KAAK,CAACI,WAAY;;;;;;;;;;;;CAHnC;AAiBA,MAAMC,kBAAkB,GAAGR,MAAM,CAACK,GAAI;;;;;;;CAAtC;AASA,MAAMI,OAAO,GAAGT,MAAM,CAACU,EAAG;WACfP,KAAK,CAACQ,QAAS;;;;;;;;;CAD1B;AAYA,MAAMC,SAAS,GAAGZ,MAAM,CAACa,EAAG;WACjBV,KAAK,CAACQ,QAAS;;;;;;;;;CAD1B;AAYA,MAAMG,SAAS,GAAGd,MAAM,CAACe,KAAM;;;;;;;;CAA/B;AAUA,MAAMC,SAAS,GAAGhB,MAAM,CAACK,GAAI;;CAA7B;AAIA,MAAMY,YAAY,GAAGjB,MAAM,CAACkB,MAAO;;;;;;;;;;;;;;;;;CAAnC;AAmBA,MAAMC,SAAS,GAAGnB,MAAM,CAACK,GAAI;;;aAGhB,CAAC;AAAEe,EAAAA;AAAF,CAAD,KACTA,KAAK,KAAK,UAAV,IAAwBA,KAAK,KAAK,SAAlC,GAA8C,CAA9C,GAAkD,CAAE;;aAE3C,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAe;AACxB,UAAQA,KAAR;AACE,SAAK,UAAL;AACE,aAAO,GAAP;;AACF,SAAK,SAAL;AACE,aAAO,GAAP;;AACF,SAAK,SAAL;AACE,aAAO,GAAP;;AACF,SAAK,QAAL;AACE,aAAO,GAAP;AARJ;AAUD,CAAC;aACS,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAgBA,KAAK,KAAK,QAAV,GAAqB,MAArB,GAA8B,OAAS;CAlBpE;AAqBA,MAAMC,oBAAoB,GAAGrB,MAAM,CAACa,EAAG;;WAE5BV,KAAK,CAACQ,QAAS;CAF1B;AAKA,MAAMW,cAAc,GAAGtB,MAAM,CAACuB,OAAQ;;;CAAtC;AAKA,MAAMC,SAAS,GAAGxB,MAAM,CAACC,kBAAD,CAAqB;;;;CAA7C;AAMA,MAAMwB,OAAO,GAAGzB,MAAM,CAACK,GAAI;WAChBF,KAAK,CAACQ,QAAS;;;CAD1B;AAMA,eAAe,SAASe,aAAT,CAAuB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,WAAR;AAAqBC,EAAAA;AAArB,CAAvB,EAA8D;AAC3E,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhC,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMiC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACzB;AACA,UAAIJ,IAAJ,EAAU,CACR;AACD;AACF;AACF,GAPD;;AAQA,MAAIK,WAAW,GAAGN,cAAc,CAACO,GAAf,CAAoBN,IAAD,iBACnC,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAEA,IAAI,CAACO,QADjB;AAEE,IAAA,EAAE,EAAEP,IAAI,CAACQ,EAFX;AAGE,IAAA,SAAS,EAAER,IAAI,CAACS,MAHlB;AAIE,IAAA,WAAW,EAAEX,WAJf;AAKE,IAAA,IAAI,EAAED,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,CAAlB;AASA,sBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAkBA,IAAI,CAACa,WAAvB,MADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAFF,eAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,MADd;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAGP,KAAD,IAAWF,OAAO,CAACE,KAAK,CAACQ,MAAN,CAAaC,KAAd,CAH9B;AAIE,IAAA,SAAS,EAAEV,aAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE,oBAAC,YAAD,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,CAHF,eAwBE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAxBF,eA2BE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,eA4BE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC,CAACH,cAAc,CAAC,CAAD,CAAhB,IAAuB,IAAvB,GACCM,WADD,gBAGC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wGAJJ,CA5BF,CADF,CADF;AA2CD","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { AiOutlineArrowDown } from \"react-icons/ai\";\r\nimport RoomCard from \"../UI/RoomCard/RoomCard\";\r\n// import AnimateComponent from \"../UI/Animations/AnimateComponent/AnimateComponent\";\r\n\r\nimport Theme from \"../../util/Theme/Theme\";\r\n\r\n// I think I'm going to fix this by splitting the logic and visual elements up.\r\n// I need to be able to animate the elements properly without interrupting the flow of data.\r\n//\r\n\r\nconst JoinOuterContainer = styled.div`\r\n  display: flex;\r\n  grid-row: ${Theme.gridRowChat};\r\n  grid-column: ${Theme.gridColChat};\r\n  justify-content: center;\r\n  text-align: center;\r\n  align-items: center;\r\n  margin: auto;\r\n  @media screen and (max-height: 400px) {\r\n    max-height: 75vh;\r\n  }\r\n\r\n  @media (min-width: 600px) and (max-height: 450px) {\r\n    // max-height: 60vh;\r\n  }\r\n`;\r\n\r\nconst JoinInnerContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 0.8rem;\r\n  // height: 83vh;\r\n  width: 55vw;\r\n  margin: auto;\r\n`;\r\n\r\nconst Heading = styled.h1`\r\n  color: ${Theme.offWhite};\r\n  justify-self: flex-start;\r\n  font-size: 2.5rem;\r\n  padding-bottom: 10px;\r\n  border-bottom: 2px solid white;\r\n  margin-top: 0;\r\n  @media (min-width: 600px) and (max-height: 450px) {\r\n    font-size: 2.25rem;\r\n  }\r\n`;\r\n\r\nconst Directive = styled.h3`\r\n  color: ${Theme.offWhite};\r\n  margin-top: 1.5rem;\r\n  margin-bottom: 3rem;\r\n  font-size: 1.75rem;\r\n  @media (min-width: 600px) and (max-height: 450px) {\r\n    margin-top: 1rem;\r\n    margin-bottom: 1.5rem;\r\n    font-size: 1.25rem;\r\n  }\r\n`;\r\n\r\nconst JoinInput = styled.input`\r\n  border-radius: 0;\r\n  padding: 15px 20px;\r\n  box-shadow: none;\r\n  width: 100%;\r\n  @media screen and (min-width: 1000px) {\r\n    width: 75%;\r\n  }\r\n`;\r\n\r\nconst JoinModal = styled.div`\r\n  margin: 1rem auto auto auto;\r\n`;\r\n\r\nconst SignInButton = styled.button`\r\n  color: #fff !important;\r\n  text-transform: uppercase;\r\n  text-decoration: none;\r\n  background: #2979ff;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  display: inline-block;\r\n  border: none;\r\n  margin-top: 20px;\r\n  width: 100%;\r\n  & :focus {\r\n    outline: 0;\r\n  }\r\n  @media screen and (min-width: 1000px) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst Animation = styled.div`\r\n  transition: 0.5s;\r\n  /* example for move item */\r\n  z-index: ${({ state }) =>\r\n    state === \"entering\" || state === \"entered\" ? 1 : 0};\r\n  /* change opacity*/\r\n  opacity: ${({ state }) => {\r\n    switch (state) {\r\n      case \"entering\":\r\n        return \"1\";\r\n      case \"entered\":\r\n        return \"1\";\r\n      case \"exiting\":\r\n        return \"0\";\r\n      case \"exited\":\r\n        return \"0\";\r\n    }\r\n  }};\r\n  display: ${({ state }) => (state === \"exited\" ? \"none\" : \"block\")};\r\n`;\r\n\r\nconst PublicRoomListHeader = styled.h3`\r\n  margin-top: 15vh;\r\n  color: ${Theme.offWhite};\r\n`;\r\n\r\nconst PublicRoomList = styled.section`\r\n  margin-top: 5vh;\r\n  display: flex;\r\n`;\r\n\r\nconst ArrowDown = styled(AiOutlineArrowDown)`\r\n  margin: 1rem auto 0 auto;\r\n  display: block;\r\n  color: #2979ff;\r\n`;\r\n\r\nconst NoRooms = styled.div`\r\n  color: ${Theme.offWhite};\r\n  text-align: center;\r\n  margin: 5rem auto 0 auto;\r\n`;\r\n\r\nexport default function JoinInternals({ user, joinHandler, previewedRooms }) {\r\n  const [room, setRoom] = useState(\"\");\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      //   do validation\r\n      if (room) {\r\n        // joinHandler(room.trim());\r\n      }\r\n    }\r\n  };\r\n  let PublicRooms = previewedRooms.map((room) => (\r\n    <RoomCard\r\n      roomName={room.roomName}\r\n      id={room.id}\r\n      usercount={room.online}\r\n      joinHandler={joinHandler}\r\n      user={user}\r\n    />\r\n  ));\r\n  return (\r\n    <JoinOuterContainer>\r\n      <JoinInnerContainer>\r\n        <Heading>Welcome {user.displayName}!</Heading>\r\n        <Directive>Enter the name of the room you wish to join.</Directive>\r\n        <JoinModal>\r\n          <JoinInput\r\n            placeholder=\"Room\"\r\n            type=\"text\"\r\n            onChange={(event) => setRoom(event.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n          />\r\n\r\n          {/* TEMPORARILY DISABLED - We're using ID now not text names. We'll have to create some kind of search menu here. */}\r\n          <SignInButton\r\n          //   type=\"submit\"\r\n          //   onClick={(e) => {\r\n          //     if (room) {\r\n          //       joinHandler(room);\r\n          //     }\r\n          //   }\r\n          // }\r\n          >\r\n            Sign In\r\n          </SignInButton>\r\n        </JoinModal>\r\n        <PublicRoomListHeader>\r\n          Or jump into a conversation in an active public chat room.\r\n        </PublicRoomListHeader>\r\n        <ArrowDown size={40} />\r\n        <PublicRoomList>\r\n          {!!previewedRooms[0] == true ? (\r\n            PublicRooms\r\n          ) : (\r\n            <NoRooms>\r\n              It appears there are no populated rooms. Why don't you join one\r\n              and invite someone to chat with?\r\n            </NoRooms>\r\n          )}\r\n        </PublicRoomList>\r\n      </JoinInnerContainer>\r\n    </JoinOuterContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}