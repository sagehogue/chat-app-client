{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Willp\\\\Desktop\\\\chat-app-sage\\\\chat-app-client-master\\\\src\\\\pages\\\\HomePage\\\\HomePage.js\";\nimport React, { useState, useEffect, useLayoutEffect, useContext } from \"react\";\nimport { FaUserFriends, FaRegComments, FaHome } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport * as firebase from \"firebase/app\"; // Add the Firebase services that you want to use\n\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport firebaseConfig from \"../../firebaseConfig\";\nimport { firebaseController } from \"../../App\";\nimport FriendsTab from \"./FriendsTab/FriendsTab\";\nimport RoomsTab from \"./RoomsTab/RoomsTab\";\nimport Chat from \"../../components/Chat/Chat\";\nimport Join from \"../../components/Join/Join\";\nimport Backdrop from \"../../components/UI/Backdrop/Backdrop\";\nimport CreateRoomModal from \"./NewRoomModal/NewRoomModal\";\nimport { AuthContext } from \"../../App\";\nimport { BackdropContextProvier } from \"../../components/UI/Backdrop/Backdrop\";\nimport Theme from \"../../util/Theme/Theme\";\nimport GlobalStyle from \"../../util/GlobalStyles/GlobalStyles\"; //      **********TODOS***********\n//\n// Create roomDisconnect event to fire when user clicks X on chat window, thus leaving the chat.\n//          *****STYLING*****\n// Fix following issue: When page is loaded directly from url bar and not from login page, it redirects to login even if immediately authenticated.\n// adjust proportions of menus - they take up too much space.\n// Create chat bubbles, user text backgrounds for better message differentiation\n// Chat app looks a little stretched out on desktop, adjust for better\n// center focus\n\n/* Description of implementation of this component:\n\n3 states\n1.) display no side bars, only main conversation\n2.) show left sidebar\n3.) show right sidebar\n\nWe should seek to adjust the whitespace around the main component so it never shifts the content. I'm thinking a system like this will work:\n<main>\n  <leftsidebar />\n    <content-wrapper>\n      <chat />\n    </content-wrapper>\n  <rightsidebar />\n</main>\n\nthe main will be a grid. the main will have state that controls the display, and the grid css will correspond to the state to render the screen how we want.\ni.e. in state 1 content-wrapper will span the whole grid, in state 2 it'll span the right 3/4 of the screen, in state 3 it'll span the left 3/4 of the screen.\n*/\n\nconst HomePageGrid = styled.main`\n  display: grid;\n  grid-template-columns: 1fr 3fr 1fr;\n  grid-template-rows: repeat(10, 1fr);\n  height: 100vh;\n  max-width: 100vw;\n  overflow: hidden;\n  background: #016789;\n`;\nconst Navigation = styled.nav`\n  font-size: 2rem;\n  display: flex;\n  height: 10vh;\n  justify-content: space-between;\n  grid-row: ${Theme.layout.gridRowNav};\n  width: 100%;\n  grid-column: ${Theme.layout.gridColNav};\n  z-index: 1;\n  padding-top: 1rem;\n  color: rgba(255, 255, 255, 0.9);\n  & svg {\n    transition: all ${Theme.navTransitionDuration};\n  }\n  & svg:first-child {\n    margin-left: 1rem;\n    color: ${props => props.pageOnDisplay == \"friends\" ? `${Theme.navColorActive}` : `${Theme.navColorInactive}`};\n  }\n  & svg:last-child {\n    margin-right: 1rem;\n    color: ${props => props.pageOnDisplay == \"rooms\" ? `${Theme.navColorActive}` : `${Theme.navColorInactive}`};\n  }\n      @media screen and (min-width: 1200px) {\n        font-size: 2.25rem;\n        & svg:first-child {\n          margin-left: 3rem;\n        }\n        & svg:last-child {\n          margin-right: 3rem;\n        }\n        }\n        @media screen and (min-width: 1600px) {\n          font-size: 2.5rem;\n          & svg:first-child {\n            margin-left: 4.5rem;\n          }\n          & svg:last-child {\n            margin-right: 4.5rem;\n          }\n          }\n          }\n`;\nexport default function HomePage({\n  socket\n}) {\n  let [display, setDisplay] = useState(\"initial\");\n  let [currentRoom, setCurrentRoom] = useState(false);\n  let [showBackdrop, setShowBackdrop] = useState(false);\n  let [showUsers, setShowUsers] = useState(false);\n  let [showCreateRoomModal, setShowCreateRoomModal] = useState(false);\n  let [populatedRooms, setPopulatedRooms] = useState([]);\n  let userAuth = useContext(AuthContext);\n  useEffect(() => {\n    socket.emit(\"requestTop8Rooms\");\n  }, []);\n  socket.on(\"top8Rooms\", topRooms => setPopulatedRooms(topRooms));\n  let firebaseDoesNotExist, db; // Check if firebase instance exists\n\n  firebaseDoesNotExist = !firebase.apps.length;\n\n  if (firebaseDoesNotExist) {\n    // Initialize Firebase\n    db = firebase.initializeApp(firebaseConfig).firestore();\n  } else {\n    db = firebase.app().firestore();\n  }\n\n  let user = userAuth;\n  let name, email, photoUrl, uid, emailVerified;\n  name = user.displayName;\n  email = user.email;\n  photoUrl = user.photoURL;\n  emailVerified = user.emailVerified;\n  uid = user.uid; // The user's ID, unique to the Firebase project. Do NOT use\n  // this value to authenticate with your backend server, use User.getToken()\n  // instead.\n\n  const handleJoinRoom = room => {\n    console.log(`Room sent to backend: ${room}`);\n    socket.emit(\"join\", {\n      name,\n      room\n    });\n    setCurrentRoom(room);\n  };\n\n  const handleDisplayFriendsTab = () => {\n    let newDisplay;\n    newDisplay = display == \"rooms\" ? \"initial\" : \"friends\";\n    setDisplay(newDisplay);\n  };\n\n  const handleCloseFriends = () => {\n    let newDisplay;\n    newDisplay = display == \"initial\" ? \"rooms\" : false;\n    setDisplay(newDisplay);\n  };\n\n  const handleDisplayRooms = () => {\n    let newDisplay;\n    newDisplay = display == \"friends\" ? \"initial\" : \"rooms\";\n    setDisplay(newDisplay);\n  };\n\n  const handleCloseRoomsTab = () => {\n    let newDisplay;\n    newDisplay = display == \"initial\" ? \"friends\" : false;\n    setDisplay(newDisplay);\n  };\n\n  const handleRevertDefault = () => {\n    setDisplay(false);\n  };\n\n  const clearChat = room => {\n    setCurrentRoom(false);\n    disconnectUser(room);\n  };\n\n  const disconnectUser = room => {\n    socket.emit(\"room-disconnect\", {\n      room,\n      name\n    });\n  };\n\n  const closeBackdrop = () => {\n    setShowBackdrop(false);\n    setShowCreateRoomModal(false);\n    setShowUsers(false);\n  };\n\n  const openBackdrop = () => {\n    setShowBackdrop(true);\n  };\n\n  const handleShowCreateRoomModal = () => {\n    setShowCreateRoomModal(true);\n    setShowBackdrop(true);\n  };\n\n  const handleRoomCreation = data => {\n    socket.emit(\"createNewRoom\", data);\n    closeBackdrop();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HomePageGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Navigation, {\n    pageOnDisplay: display,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FaUserFriends, {\n    onClick: handleDisplayFriendsTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FaHome, {\n    onClick: handleRevertDefault,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }), \" \", /*#__PURE__*/React.createElement(FaRegComments, {\n    onClick: handleDisplayRooms,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FriendsTab, {\n    pageOnDisplay: display,\n    logoutHandler: firebaseController.logout,\n    closeTabHandler: handleCloseFriends,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CreateRoomModal, {\n    visible: showCreateRoomModal,\n    closeHandler: closeBackdrop,\n    submitHandler: handleRoomCreation,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }), currentRoom ? /*#__PURE__*/React.createElement(Chat, {\n    user: user,\n    room: currentRoom,\n    openBackdrop: openBackdrop,\n    closeChatHandler: clearChat,\n    socket: socket,\n    showUsers: showUsers,\n    setShowUsers: setShowUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Join, {\n    user: user,\n    joinHandler: handleJoinRoom,\n    previewedRooms: populatedRooms,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(RoomsTab, {\n    pageOnDisplay: display,\n    closeTabHandler: handleCloseRoomsTab,\n    createRoomHandler: handleShowCreateRoomModal,\n    closeCreateRoomHandler: closeBackdrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Backdrop, {\n    closeBackdrop: closeBackdrop,\n    visible: showBackdrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Willp/Desktop/chat-app-sage/chat-app-client-master/src/pages/HomePage/HomePage.js"],"names":["React","useState","useEffect","useLayoutEffect","useContext","FaUserFriends","FaRegComments","FaHome","styled","firebase","firebaseConfig","firebaseController","FriendsTab","RoomsTab","Chat","Join","Backdrop","CreateRoomModal","AuthContext","BackdropContextProvier","Theme","GlobalStyle","HomePageGrid","main","Navigation","nav","layout","gridRowNav","gridColNav","navTransitionDuration","props","pageOnDisplay","navColorActive","navColorInactive","HomePage","socket","display","setDisplay","currentRoom","setCurrentRoom","showBackdrop","setShowBackdrop","showUsers","setShowUsers","showCreateRoomModal","setShowCreateRoomModal","populatedRooms","setPopulatedRooms","userAuth","emit","on","topRooms","firebaseDoesNotExist","db","apps","length","initializeApp","firestore","app","user","name","email","photoUrl","uid","emailVerified","displayName","photoURL","handleJoinRoom","room","console","log","handleDisplayFriendsTab","newDisplay","handleCloseFriends","handleDisplayRooms","handleCloseRoomsTab","handleRevertDefault","clearChat","disconnectUser","closeBackdrop","openBackdrop","handleShowCreateRoomModal","handleRoomCreation","data","logout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect, useContext } from \"react\";\nimport { FaUserFriends, FaRegComments, FaHome } from \"react-icons/fa\";\nimport styled from \"styled-components\";\n\nimport * as firebase from \"firebase/app\";\n// Add the Firebase services that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport firebaseConfig from \"../../firebaseConfig\";\nimport { firebaseController } from \"../../App\";\n\nimport FriendsTab from \"./FriendsTab/FriendsTab\";\nimport RoomsTab from \"./RoomsTab/RoomsTab\";\nimport Chat from \"../../components/Chat/Chat\";\nimport Join from \"../../components/Join/Join\";\nimport Backdrop from \"../../components/UI/Backdrop/Backdrop\";\nimport CreateRoomModal from \"./NewRoomModal/NewRoomModal\";\n\nimport { AuthContext } from \"../../App\";\nimport { BackdropContextProvier } from \"../../components/UI/Backdrop/Backdrop\";\n\nimport Theme from \"../../util/Theme/Theme\";\nimport GlobalStyle from \"../../util/GlobalStyles/GlobalStyles\";\n\n//      **********TODOS***********\n//\n// Create roomDisconnect event to fire when user clicks X on chat window, thus leaving the chat.\n\n//          *****STYLING*****\n// Fix following issue: When page is loaded directly from url bar and not from login page, it redirects to login even if immediately authenticated.\n// adjust proportions of menus - they take up too much space.\n// Create chat bubbles, user text backgrounds for better message differentiation\n// Chat app looks a little stretched out on desktop, adjust for better\n// center focus\n\n/* Description of implementation of this component:\n\n3 states\n1.) display no side bars, only main conversation\n2.) show left sidebar\n3.) show right sidebar\n\nWe should seek to adjust the whitespace around the main component so it never shifts the content. I'm thinking a system like this will work:\n<main>\n  <leftsidebar />\n    <content-wrapper>\n      <chat />\n    </content-wrapper>\n  <rightsidebar />\n</main>\n\nthe main will be a grid. the main will have state that controls the display, and the grid css will correspond to the state to render the screen how we want.\ni.e. in state 1 content-wrapper will span the whole grid, in state 2 it'll span the right 3/4 of the screen, in state 3 it'll span the left 3/4 of the screen.\n*/\n\nconst HomePageGrid = styled.main`\n  display: grid;\n  grid-template-columns: 1fr 3fr 1fr;\n  grid-template-rows: repeat(10, 1fr);\n  height: 100vh;\n  max-width: 100vw;\n  overflow: hidden;\n  background: #016789;\n`;\n\nconst Navigation = styled.nav`\n  font-size: 2rem;\n  display: flex;\n  height: 10vh;\n  justify-content: space-between;\n  grid-row: ${Theme.layout.gridRowNav};\n  width: 100%;\n  grid-column: ${Theme.layout.gridColNav};\n  z-index: 1;\n  padding-top: 1rem;\n  color: rgba(255, 255, 255, 0.9);\n  & svg {\n    transition: all ${Theme.navTransitionDuration};\n  }\n  & svg:first-child {\n    margin-left: 1rem;\n    color: ${(props) =>\n      props.pageOnDisplay == \"friends\"\n        ? `${Theme.navColorActive}`\n        : `${Theme.navColorInactive}`};\n  }\n  & svg:last-child {\n    margin-right: 1rem;\n    color: ${(props) =>\n      props.pageOnDisplay == \"rooms\"\n        ? `${Theme.navColorActive}`\n        : `${Theme.navColorInactive}`};\n  }\n      @media screen and (min-width: 1200px) {\n        font-size: 2.25rem;\n        & svg:first-child {\n          margin-left: 3rem;\n        }\n        & svg:last-child {\n          margin-right: 3rem;\n        }\n        }\n        @media screen and (min-width: 1600px) {\n          font-size: 2.5rem;\n          & svg:first-child {\n            margin-left: 4.5rem;\n          }\n          & svg:last-child {\n            margin-right: 4.5rem;\n          }\n          }\n          }\n`;\n\nexport default function HomePage({ socket }) {\n  let [display, setDisplay] = useState(\"initial\");\n  let [currentRoom, setCurrentRoom] = useState(false);\n  let [showBackdrop, setShowBackdrop] = useState(false);\n  let [showUsers, setShowUsers] = useState(false);\n  let [showCreateRoomModal, setShowCreateRoomModal] = useState(false);\n  let [populatedRooms, setPopulatedRooms] = useState([]);\n  let userAuth = useContext(AuthContext);\n  useEffect(() => {\n    socket.emit(\"requestTop8Rooms\");\n  }, []);\n  socket.on(\"top8Rooms\", (topRooms) => setPopulatedRooms(topRooms));\n  let firebaseDoesNotExist, db;\n  // Check if firebase instance exists\n  firebaseDoesNotExist = !firebase.apps.length;\n  if (firebaseDoesNotExist) {\n    // Initialize Firebase\n    db = firebase.initializeApp(firebaseConfig).firestore();\n  } else {\n    db = firebase.app().firestore();\n  }\n  let user = userAuth;\n  let name, email, photoUrl, uid, emailVerified;\n  name = user.displayName;\n  email = user.email;\n  photoUrl = user.photoURL;\n  emailVerified = user.emailVerified;\n  uid = user.uid; // The user's ID, unique to the Firebase project. Do NOT use\n  // this value to authenticate with your backend server, use User.getToken()\n  // instead.\n  const handleJoinRoom = (room) => {\n    console.log(`Room sent to backend: ${room}`);\n    socket.emit(\"join\", { name, room });\n    setCurrentRoom(room);\n  };\n\n  const handleDisplayFriendsTab = () => {\n    let newDisplay;\n    newDisplay = display == \"rooms\" ? \"initial\" : \"friends\";\n    setDisplay(newDisplay);\n  };\n\n  const handleCloseFriends = () => {\n    let newDisplay;\n    newDisplay = display == \"initial\" ? \"rooms\" : false;\n    setDisplay(newDisplay);\n  };\n\n  const handleDisplayRooms = () => {\n    let newDisplay;\n    newDisplay = display == \"friends\" ? \"initial\" : \"rooms\";\n    setDisplay(newDisplay);\n  };\n\n  const handleCloseRoomsTab = () => {\n    let newDisplay;\n    newDisplay = display == \"initial\" ? \"friends\" : false;\n    setDisplay(newDisplay);\n  };\n\n  const handleRevertDefault = () => {\n    setDisplay(false);\n  };\n\n  const clearChat = (room) => {\n    setCurrentRoom(false);\n    disconnectUser(room);\n  };\n\n  const disconnectUser = (room) => {\n    socket.emit(\"room-disconnect\", { room, name });\n  };\n\n  const closeBackdrop = () => {\n    setShowBackdrop(false);\n    setShowCreateRoomModal(false);\n    setShowUsers(false);\n  };\n  const openBackdrop = () => {\n    setShowBackdrop(true);\n  };\n\n  const handleShowCreateRoomModal = () => {\n    setShowCreateRoomModal(true);\n    setShowBackdrop(true);\n  };\n\n  const handleRoomCreation = (data) => {\n    socket.emit(\"createNewRoom\", data);\n    closeBackdrop();\n  };\n\n  return (\n    <>\n      <HomePageGrid>\n        <GlobalStyle />\n        <Navigation pageOnDisplay={display}>\n          <FaUserFriends onClick={handleDisplayFriendsTab} />\n          <FaHome onClick={handleRevertDefault} /> {/* Link to homepage */}\n          <FaRegComments onClick={handleDisplayRooms} />\n        </Navigation>\n        <FriendsTab\n          pageOnDisplay={display}\n          logoutHandler={firebaseController.logout}\n          closeTabHandler={handleCloseFriends}\n        ></FriendsTab>\n        <CreateRoomModal\n          visible={showCreateRoomModal}\n          closeHandler={closeBackdrop}\n          submitHandler={handleRoomCreation}\n          user={user}\n        />\n\n        {currentRoom ? (\n          <Chat\n            user={user}\n            room={currentRoom}\n            openBackdrop={openBackdrop}\n            closeChatHandler={clearChat}\n            socket={socket}\n            showUsers={showUsers}\n            setShowUsers={setShowUsers}\n          />\n        ) : (\n          <Join\n            user={user}\n            joinHandler={handleJoinRoom}\n            previewedRooms={populatedRooms}\n          />\n        )}\n        <RoomsTab\n          pageOnDisplay={display}\n          closeTabHandler={handleCloseRoomsTab}\n          createRoomHandler={handleShowCreateRoomModal}\n          closeCreateRoomHandler={closeBackdrop}\n        ></RoomsTab>\n      </HomePageGrid>\n      <Backdrop closeBackdrop={closeBackdrop} visible={showBackdrop} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}